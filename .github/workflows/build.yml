name: Build Packages

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        series: [bionic, focal, jammy]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y devscripts build-essential lintian dput-ng python3-dev \
          debhelper cmake pkg-config libz-dev libmbedtls-dev libssh2-1-dev \
          libhttp-parser-dev libkrb5-dev python-is-python3
    
    - name: Import PGP key
      if: ${{ env.PGP_KEY != '' }}
      env:
        PGP_KEY: ${{ secrets.PGP_KEY }}
      run: |
        # Configure GPG for non-interactive mode
        export GPG_TTY=$(tty) || true
        echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
        echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
        gpgconf --kill gpg-agent
        gpgconf --launch gpg-agent
        
        # Import the key with batch mode
        echo "$PGP_KEY" | gpg --batch --import
        
        # Trust the key
        gpg --list-keys --fingerprint --with-colons vladtemian@gmail.com | sed -E -n -s 's/^fpr:::::::::([0-9A-F]+):$/\1:6:/p' | gpg --import-ownertrust
    
    - name: Build packages
      env:
        DEBEMAIL: "vladtemian@gmail.com"
        DEBFULLNAME: "Vlad Temian"
        SERIES: ${{ matrix.series }}
        GITHUB_ACTIONS: true
        GITHUB_REF: ${{ github.ref }}
        GITHUB_REF_TYPE: ${{ github.ref_type }}
        GITHUB_RUN_NUMBER: ${{ github.run_number }}
        GITHUB_REF_NAME: ${{ github.ref_name }}
        GNUPGHOME: /home/runner/.gnupg
      run: |
        # Configure GPG for signing
        echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
        
        make clean
        make build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: packages-${{ matrix.series }}
        path: build/
    
    - name: Deploy to PPA (master branch)
      if: github.ref == 'refs/heads/master' && github.event_name == 'push' && env.PGP_KEY != ''
      env:
        PGP_KEY: ${{ secrets.PGP_KEY }}
      run: |
        cd build && dput ppa:vladtemian/gitfs *.changes